{"info": {"authoring.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/authoring.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Authoring Posts", "blurb": "[TOC]  Overview Adding posts to your PyKwiki consists of two main pieces. 1. Some way to get your content to a server. 2. Some way to run `pykwiki cache` to cache your content.  Things to know Technical knowledge: 1. A basic understanding of [Markdown](/markdown.html). 2. A basic understanding..."}, "webserver.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/webserver.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Webserver", "blurb": " Webserver Configuration  Apache To configure Apache to work with PyKwiki, you'll need a virtual host entry for static files that points to the PyKwiki install. For example, if your project directory is `/home/hpotter/pykwiki/MyBlog`, then a virtual host entry might appear as follows: :::apache VirtualHost *:80 ServerName www.myblog.com DocumentRoot..."}, "remote-editing-tutorial.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/remote-editing-tutorial.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Remote Editing Tutorial", "blurb": "[TOC]  Remote editing with Bit Torrent Sync BitTorrent Sync is free software available from [http://www.bittorrent.com/sync](http://www.bittorrent.com/sync).  BT Sync Server Setup 1. [Download BT Sync](http://www.bittorrent.com/sync/downloads) for your server OS. 2. Extract it somewhere :::bash $ cd /path/to/btsync $ tar -xvzf btsync_some_version.tar.gz 3. Run the server :::bash $ cd btsync_some_version/ $..."}, "themes.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/themes.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Themes", "blurb": " Built-in themes PyKwiki features some built-in themes that can be installed with `pykwiki theme install theme_name`. div class=\"row\" {tpl:theme} name: Default class: col-sm-4 description: The default PyKwiki theme. image: pykwiki-theme-default.png features: - Valid HTML5 - Mobile friendly - Uses Bootstrap 3 - Supports searching - Includes respond.js for IE8..."}, "faqs.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/faqs.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Frequently Asked Questions", "blurb": "[TOC]  Frequently Asked Questions  About authoring {section:one}  How do I specify the date of the post? In the [post configuration section](/authoring.htmlpost-data-block), set the `timestamp` key. It must match the format from [[config.yaml]] - `timestamp_format`. **Example** :::text [[ title: My Post tags: [stuff, moar stuff] timestamp: 2013-11-13 21:14..."}, "getting-started.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/getting-started.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Getting Started", "blurb": "[TOC]  Getting Started This guide outlines the minimal steps to get PyKwiki serving static files.  Requirements PyKwiki does not require anything outside of Python, but it does require the following Python packages: * `jinja2` (=2.6) - Jinja2 is used to compile themes into .html. * Install with `sudo..."}, "home.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/home.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Welcome!", "blurb": "PyKwiki introduction for new site administrators."}, "testing.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/testing.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Testing", "blurb": "[[faqs:section:one]] :::bash $ sudo pip install pykwiki ... $ pykwiki new MyProject ... $ cd MyProject $ pykwiki cache $ cd docroot $ python -m SimpleHTTPServer 5000 Serving HTTP on 0.0.0.0 port 5000 ......"}, "command-line.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/command-line.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "PyKwiki Command Line", "blurb": " Basic Usage :::bash usage: pykwiki [-h] [-b BASE_PATH] [-c CONFIG_FILE] {new,index,cache,info,theme} ... positional arguments: {new,index,cache,info,theme} new create a new project index build the search index cache cache and index posts info display PyKwiki information theme control built-in themes optional arguments: -h, --help show this help message and exit -b..."}, "examples/codehilite.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/examples/codehilite.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Code-Hilite Examples", "blurb": "[TOC] PyKwiki uses the Markdown module's [codehilite](http://pythonhosted.org//Markdown/extensions/code_hilite.html) extension by default. This extension is powered by [Pygments](http://pygments.org) and supports a [wide variety of languages](http://pygments.org/languages/).  No hilighting (text) :::text Unhilighted: :::text No \"syntax\" highlighting here... **Produces:** Unhilighted: :::text No \"syntax\" highlighting here...  Python :::text Sample *Python*: :::python def foo(): print(\"Bar\")..."}, "templates.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/templates.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Helper Templates", "blurb": "[TOC]  Helper Templates This page contains a collection of templates that may be considered useful.  Simple Tables This template is a quick way to add simple tables without writing HTML. It takes two arguments: * `headers` - An *optional* YAML list specifying `th` elements - column headers. *..."}, "extensions.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/extensions.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Extensions", "blurb": "[TOC]  PyKwiki Extensions  MarkDown Extensions  pykwiki.ext.post {tpl:versionwarning} version: 1.0 {endtpl} This extension is not compatible with the `wikilink` markdown extension. This extension syntax is: [[page:optional property]] Assuming you have a post in `source` called `home.md` with `title` set to \"Home\", then the following MarkDown: :::text Here is..."}, "download.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/download.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Download", "blurb": " Download PyKwiki There are a few different ways to download PyKwiki  On Github Get the latest and greatest version on Github. a href=\"https://github.com/nullism/pykwiki/archive/master.zip\" class=\"btn btn-lg btn-success\"Github b class=\"glyphicon glyphicon-download\"/b/a * Or clone it directly with `git clone https://github.com/nullism/pykwiki.git` Install using `sudo ./setup.py install`  From PyPI Get the..."}, "api.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/api.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "API", "blurb": "[TOC] {tpl:versionwarning} version: 1.0 {endtpl}  Application Programming Interface  conf Object The conf object is made available to all theme templates.  Properties **config.yaml** Any property in `config.yaml` is available to this object. **Useful properties for themes** * `web_prefix` - When a theme makes calls to local resources, it..."}, "links.yaml.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/links.yaml.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "links.yaml", "blurb": " links.yaml The `links.yaml` file specifies how PyKwiki should generate a menu for your site. **Example of the structure of a link:** :::yaml - Example Link Name:  PyKwiki page name, relative to the source directory, *optional* post: external-links  Used in a href=, *optional* href: http://google.com  Target attribute,..."}, "speed.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/speed.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Speed", "blurb": " Faster than PHP PyKwiki is fast because it's 100% static. No server side processing is necessary. Why regenerate a page every single time someone visits it? PyKwiki regenerates the page only when its content has changed. *But wait! How can that be if you have built-in searching?* PyKwiki generates..."}, "release-notes.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/release-notes.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Release Notes", "blurb": "[TOC]  v1.0.1 - 2013-11-21 First stable release. Is **not** compatible with previous versions. * renamed \"Page\", \"PageController\" and all related methods and instances to use \"post\" instead of \"page\" * updated themes to use new Post system. * major changes to `pykwiki.core` * All instances of Page are now..."}, "comparison.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/comparison.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Feature Comparison", "blurb": " Compare PyKwiki, WordPress, Drupal, and MediaWiki {tpl:table} headers: - '' - PyKwiki - WordPress - Drupal - MediaWiki rows: - - \"bAuthoring/b\" - \"Markdown file-based\" - \"WYSIWYG\" - \"WYSIWYG\" - \"MediaWiki web editor\" - - \"bHosting/b\" - 'Static files' - \"PHP and MySQL required\" - \"PHP and MySQL required\"..."}, "config.yaml.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/config.yaml.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "config.yaml", "blurb": "{tpl:versionwarning} version: 1.0 {endtpl}  config.yaml Below is a typical `config.yaml` file :::yaml  Maximum number of words to use in a blurb blurb_max: 50  The default home page to be written as docroot/index.html home_page: home.md site:  The site title, used in title title: My PyKwiki Project ..."}, "features.html": {"mtime_string": "14:02", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/features.html", "mdate_string": "October 12, 2013", "mtimestamp": "2013-10-12 14:21", "mtime": 1381602060, "title": "Features", "blurb": " Features An overview of PyKwiki's most important features. See also: [[comparison]] div class=\"row\" {tpl:feature} name: Recent Posts class: col-sm-4 description: PyKwiki works well for blogs, review sites, or anything else that needs a \"recent posts\" type of feature. screenshot: /uploads/features/recent_posts.png link: /posts.html link_label: Try it out &raquo; {endtpl} {tpl:feature}..."}, "creating-themes.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/creating-themes.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Creating Themes", "blurb": "[TOC] {tpl:versionwarning} version: 1.0.1 {endtpl}  Creating themes PyKwiki themes are designed to be easy to create. Visit [[api]] to see a list of advanced functions and properties available to themes.  Theme Directory Structure :::text ThemeName/ info.yaml options.yaml menu.html post.html postlist.html posts.html search.html static/ * `info.yaml` - Includes information..."}, "about-search.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/about-search.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "About Search", "blurb": "[TOC]  About Search  How it works  1. The search index Existing content is cached, and a search index is built. $ pykwiki cache ... The search index gets written to `conf.index_file` (default: `idx.json`). **Sample JSON index file format** :::javascript { \"index\":{ \"foo\":[3,2,5], \"bar\":[3,1,6], \"baz\":[2], ... }, \"ids\":{..."}, "markdown.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/markdown.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Markdown Basics", "blurb": " Markdown Markdown is a popular text format for editing files. It is often used to produce well formatted web content. It is used extensively by GitHub, Reddit, Stack Overflow, and many others. One of the easiest ways to become familiar with Markdown is to [give it a try](https://stackedit.io)! ..."}, "support.html": {"mtime_string": "15:03", "author": "Aaron Meier", "url": "http://pykwiki-classic.nullism.com/support.html", "mdate_string": "December 10, 2015", "mtimestamp": "2015-12-10 15:16", "mtime": 1449778606, "title": "Support", "blurb": " Support The preferred method to report issues or ask questions is via the PyKwiki Github page. a href=\"https://github.com/nullism/pykwiki/issues\" class=\"btn btn-default btn-lg\"Github/a..."}}, "ids": {"1": "home.html", "2": "themes.html", "3": "config.yaml.html", "4": "download.html", "5": "templates.html", "6": "support.html", "7": "getting-started.html", "8": "features.html", "9": "about-search.html", "10": "api.html", "11": "comparison.html", "12": "testing.html", "13": "creating-themes.html", "14": "markdown.html", "15": "extensions.html", "16": "release-notes.html", "17": "links.yaml.html", "18": "speed.html", "19": "authoring.html", "20": "faqs.html", "21": "command-line.html", "22": "webserver.html", "23": "remote-editing-tutorial.html", "24": "examples/codehilite.html"}}